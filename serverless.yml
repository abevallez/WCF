service: pufouniversity
plugins:
  - serverless-pseudo-parameters
  - serverless-iam-roles-per-function
 
provider:
  name: aws
  runtime: nodejs12.x
  region: ${opt:region, self:custom.defaultRegion}
  stage: dev${env:SLSUSER, ""}
  environment:
    service: ${self:service}-${self:custom.stage}
    epsagonToken: ${ssm:/pufouniversity/${self:custom.stage}/epsagonTokenSecure~true}

custom:
  defaultRegion: eu-west-1
  stage: ${opt:stage, self:provider.stage}
  mastersTable: masters-${self:custom.stage}
  enrolMasterSnsTopicName: enrollMasterEvents-${self:custom.stage}
  enrolMasterSnsTopic: arn:aws:sns:#{AWS::Region}:#{AWS::AccountId}:${self:custom.enrolMasterSnsTopicName}

functions:
  getMasters:
    handler: src/functions/getMasters.handler
    events:
      - http:
          path: api/masters
          method: get
    environment:
      mastersTable: ${self:custom.mastersTable}
    iamRoleStatements:
      - Effect: Allow
        Action: dynamodb:scan
        Resource: arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/${self:custom.mastersTable}
  enrollMaster:
    handler: src/functions/enrollMaster.handler
    events:
      - http:
          path: api/masters
          method: post
    environment:
      enrollMasterSnsTopic: ${self:custom.enrolMasterSnsTopic}
    iamRoleStatements:
      - Effect: Allow
        Action: sns:Publish
        Resource: ${self:custom.enrolMasterSnsTopic}
  notifyUniversity:
    handler: src/functions/notifyUniversity.handler
    events:
      - sns: ${self:custom.enrolMasterSnsTopicName}
    environment:
      emailAddress: abevallez@gmail.com
    iamRoleStatements:
      - Effect: Allow
        Action: 
          - ses:SendEmail
          - ses:SendRawEmail
        Resource: "*"
resources:
  Resources:
    MastersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.mastersTable}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: N
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST